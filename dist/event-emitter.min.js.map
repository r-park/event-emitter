{"version":3,"sources":["event-emitter.min.js"],"names":["root","factory","define","amd","exports","module","eventEmitter","this","eventTypes","object","key","keys","Object","emitter","n","length","create","_events","getEvents","events","Array","isArray","TypeError","i","l","clone","listeners","cloned","indexOf","listener","fn","splice","index","j","k","pop","on","addListener","type","scope","once","_getListeners","Error","that","fired","push","wrapper","data","removeListener","call","emit","callback","removeAllListeners","event","listenerCount"],"mappings":"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","file":"event-emitter.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.eventEmitter = factory();\n  }\n}(this, function() {\n'use strict';\n\n\n/**\n * @name eventEmitter\n *\n * @param {string|string[]} eventTypes\n * @param {Object} [object]\n * @returns {Object}\n */\nfunction eventEmitter(eventTypes, object) { // eslint-disable-line no-unused-vars\n  if (object) {\n    var keys = Object.keys(emitter),\n        n = keys.length,\n        key;\n\n    while (n--) {\n      key = keys[n];\n      object[key] = emitter[key];\n    }\n  }\n  else {\n    object = Object.create(emitter); // eslint-disable-line no-param-reassign\n  }\n\n  object._events = getEvents(eventTypes);\n\n  return object;\n}\n\n\n/**\n * @param {string|string[]} eventTypes\n * @returns {Object.<string,Array>}\n */\nfunction getEvents(eventTypes) {\n  var events = {};\n\n  if (typeof eventTypes === 'string') {\n    events[eventTypes] = [];\n  }\n  else if (Array.isArray(eventTypes) && eventTypes.length) {\n    for (var i = 0, l = eventTypes.length; i < l; ++i) {\n      events[eventTypes[i]] = [];\n    }\n  }\n  else {\n    throw new TypeError('EventEmitter : `eventTypes` is required');\n  }\n\n  return events;\n}\n\n\nvar emitter = {};\n\n\n/**\n * @param {string} type\n * @param {Function} listener\n * @param {boolean|Object} [scope]\n * @param {boolean} [once]\n * @returns emitter\n */\nemitter.on =\nemitter.addListener = function(type, listener, scope, once) {\n  if (typeof listener !== 'function') {\n    throw new TypeError();\n  }\n\n  var listeners = this._getListeners(type);\n\n  if (listeners.length && indexOf(listeners, listener) !== -1) {\n    throw new Error();\n  }\n\n  if (scope === true || once === true) {\n    var that = this,\n        fired = false;\n\n    listeners.push({\n      fn: function wrapper(data) {\n        that.removeListener(type, wrapper);\n        if (!fired) {\n          fired = true;\n          listener.call(scope || {}, data);\n        }\n      },\n      scope: {}\n    });\n  }\n  else {\n    listeners.push({\n      fn: listener,\n      scope: scope || {}\n    });\n  }\n\n  return this;\n};\n\n\n/**\n * @param {string} type\n * @param {*} data\n * @param {Function} [callback]\n * @returns emitter\n */\nemitter.emit = function(type, data, callback) {\n  var listeners = this._getListeners(type);\n\n  if (listeners.length) {\n    listeners = clone(listeners);\n\n    for (var i = 0, l = listeners.length, listener; i < l; ++i) {\n      listener = listeners[i];\n      listener.fn.call(listener.scope, data, callback);\n    }\n  }\n\n  return this;\n};\n\n\n/**\n * @param {string} type\n * @param {Function} listener\n * @returns emitter\n */\nemitter.removeListener = function(type, listener) {\n  var listeners = this._getListeners(type),\n      index;\n\n  if (listeners.length) {\n    index = indexOf(listeners, listener);\n    if (index !== -1) {\n      splice(listeners, index);\n    }\n  }\n\n  return this;\n};\n\n\n/**\n * @param {string} [type]\n * @returns emitter\n */\nemitter.removeAllListeners = function(type) {\n  if (typeof type === 'string') {\n    var listeners = this._getListeners(type);\n    listeners.length = 0;\n  }\n  else if (typeof type === 'undefined') {\n    var events = this._events;\n    for (var event in events) {\n      events[event].length = 0;\n    }\n  }\n\n  return this;\n};\n\n\n/**\n * @param {string} type\n * @returns {Array}\n */\nemitter.listeners = function(type) {\n  var listeners = this._getListeners(type);\n  return listeners.length ? clone(listeners) : [];\n};\n\n\n/**\n * @param {string} type\n * @returns {number}\n */\nemitter.listenerCount = function(type) {\n  var listeners = this._getListeners(type);\n  return listeners.length;\n};\n\n\n/**\n * @param {string} type\n * @returns {Array}\n * @throws {Error}\n */\nemitter._getListeners = function(type) {\n  var listeners = this._events[type];\n  if (!listeners) {\n    throw new Error('EventEmitter : event type `' + type + '` does not exist');\n  }\n  return listeners;\n};\n\n\n/**\n * @param {Array} listeners\n * @returns {Array}\n */\nfunction clone(listeners) {\n  var i = listeners.length,\n      cloned = new Array(i);\n\n  while (i--) {\n    cloned[i] = listeners[i];\n  }\n\n  return cloned;\n}\n\n\n/**\n * @param {Array} listeners\n * @param {Object} listener\n * @returns {number}\n */\nfunction indexOf(listeners, listener) {\n  var i = listeners.length;\n\n  while (i--) {\n    if (listener === listeners[i].fn) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n\n/**\n * @param {Array} listeners\n * @param {number} index\n */\nfunction splice(listeners, index) {\n  for (var i = index, j = i + 1, k = listeners.length; j < k; ++i, ++j) {\n    listeners[i] = listeners[j];\n  }\n\n  listeners.pop();\n}\n\nreturn eventEmitter;\n}));\n"],"sourceRoot":"/source/"}