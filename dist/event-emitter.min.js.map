{"version":3,"sources":["event-emitter.min.js"],"names":["root","factory","define","amd","exports","module","Emitter","this","eventTypes","object","Object","assign","emitter","keys","forEach","key","create","_setEventTypes","clone","listeners","i","length","cloned","Array","indexOf","listener","fn","splice","index","j","k","pop","toParam","args","params","addListener","type","scope","once","TypeError","_getListeners","Error","that","fired","push","wrapper","data","removeListener","call","emit","arguments","l","apply","removeAllListeners","events","_events","event","listenerCount","isArray","on"],"mappings":"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","file":"event-emitter.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Emitter = factory();\n  }\n}(this, function() {\n'use strict';\n\n\nvar emitter = {\n\n  /**\n   * @param {string} type\n   * @param {Function} listener\n   * @param {boolean|Object} [scope]\n   * @param {boolean} [once]\n   * @returns emitter\n   */\n  addListener : function(type, listener, scope, once) {\n    if (typeof listener !== 'function') {\n      throw new TypeError();\n    }\n\n    var listeners = this._getListeners(type);\n\n    if (listeners.length && indexOf(listeners, listener) !== -1) {\n      throw new Error();\n    }\n\n    if (scope === true || once === true) {\n      var that = this,\n          fired = false;\n\n      listeners.push({\n        fn: function wrapper(data) {\n          that.removeListener(type, wrapper);\n          if (!fired) {\n            fired = true;\n            listener.call(scope || {}, data);\n          }\n        },\n        scope: {}\n      });\n    }\n    else {\n      listeners.push({\n        fn: listener,\n        scope: scope || {}\n      });\n    }\n\n    return this;\n  },\n\n\n  /**\n   * @param {string} type\n   * @returns emitter\n   */\n  emit : function(type) {\n    var listeners = this._getListeners(type),\n        params;\n\n    if (listeners.length) {\n      params = toParam(arguments);\n      listeners = clone(listeners);\n\n      for (var i = 0, l = listeners.length, listener; i < l; ++i) {\n        listener = listeners[i];\n        listener.fn.apply(listener.scope, params);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * @param {string} type\n   * @param {Function} listener\n   * @returns emitter\n   */\n  removeListener : function(type, listener) {\n    var listeners = this._getListeners(type),\n        index;\n\n    if (listeners.length) {\n      index = indexOf(listeners, listener);\n      if (index !== -1) {\n        splice(listeners, index);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * @param {string} [type]\n   * @returns emitter\n   */\n  removeAllListeners : function(type) {\n    if (typeof type === 'string') {\n      var listeners = this._getListeners(type);\n      listeners.length = 0;\n    }\n    else if (typeof type === 'undefined') {\n      var events = this._events;\n      for (var event in events) {\n        events[event].length = 0;\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * @param {string} type\n   * @returns {Array}\n   */\n  listeners : function(type) {\n    var listeners = this._getListeners(type);\n    return listeners.length ? clone(listeners) : [];\n  },\n\n\n  /**\n   * @param {string} type\n   * @returns {number}\n   */\n  listenerCount : function(type) {\n    var listeners = this._getListeners(type);\n    return listeners.length;\n  },\n\n\n  /**\n   * @param {string} type\n   * @returns {Array}\n   * @throws {Error}\n   */\n  _getListeners : function(type) {\n    var listeners = this._events[type];\n    if (!listeners) {\n      throw new Error('EventEmitter : event type `' + type + '` does not exist');\n    }\n    return listeners;\n  },\n\n\n  /**\n   * @param {string|string[]} eventTypes\n   * @returns {Object.<string,Array>}\n   * @throws {TypeError}\n   */\n  _setEventTypes : function(eventTypes) {\n    var events = {};\n\n    if (typeof eventTypes === 'string') {\n      events[eventTypes] = [];\n    }\n    else if (Array.isArray(eventTypes) && eventTypes.length) {\n      for (var i = 0, l = eventTypes.length; i < l; ++i) {\n        events[eventTypes[i]] = [];\n      }\n    }\n    else {\n      throw new TypeError('EventEmitter : `eventTypes` is required');\n    }\n\n    this._events = events;\n  }\n\n};\n\n\n// create alias `on`\nemitter.on = emitter.addListener;\n\n\n/**\n * @param {string|string[]} eventTypes\n * @param {Object} [object]\n * @returns {Object}\n */\nfunction Emitter(eventTypes, object) { // eslint-disable-line no-unused-vars\n  if (object) {\n    if (Object.assign) {\n      Object.assign(object, emitter);\n    }\n    else {\n      Object.keys(emitter).forEach(function(key){\n        object[key] = emitter[key];\n      });\n    }\n  }\n  else {\n    object = Object.create(emitter); // eslint-disable-line no-param-reassign\n  }\n\n  object._setEventTypes(eventTypes);\n\n  return object;\n}\n\n\n/**\n * @param {Array} listeners\n * @returns {Array}\n */\nfunction clone(listeners) {\n  var i = listeners.length,\n      cloned = new Array(i);\n\n  while (i--) {\n    cloned[i] = listeners[i];\n  }\n\n  return cloned;\n}\n\n\n/**\n * @param {Array} listeners\n * @param {Object} listener\n * @returns {number}\n */\nfunction indexOf(listeners, listener) {\n  var i = listeners.length;\n\n  while (i--) {\n    if (listener === listeners[i].fn) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n\n/**\n * @param {Array} listeners\n * @param {number} index\n */\nfunction splice(listeners, index) {\n  for (var i = index, j = i + 1, k = listeners.length; j < k; ++i, ++j) {\n    listeners[i] = listeners[j];\n  }\n\n  listeners.pop();\n}\n\n\n/**\n * @param {*} args\n * @returns {Array}\n */\nfunction toParam(args) {\n  var i = args.length - 1,\n      params = new Array(i);\n\n  while (i--) {\n    params[i] = args[i + 1];\n  }\n\n  return params;\n}\n\nreturn Emitter;\n}));\n"],"sourceRoot":"/source/"}