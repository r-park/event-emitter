/* event-emitter v0.3.1 - 2015-06-25T03:50:09.998Z - https://github.com/r-park/event-emitter */
!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.eventEmitter=t()}(this,function(){"use strict";function e(e,t){var n={};if("string"==typeof e)n[e]=[];else{if(!Array.isArray(e)||!e.length)throw new TypeError("EventEmitter : {string|string[]} `eventTypes` is required");for(var r=0,s=e.length;s>r;++r)n[e[r]]=[]}if(t)for(var o,f=Object.keys(i),u=f.length;u--;)o=f[u],t[o]=i[o];else t=Object.create(i);return t._events=n,t}function t(e){for(var t=e.length,n=new Array(t);t--;)n[t]=e[t];return n}function n(e,t){for(var n=e.length;n--;)if(t===e[n].fn)return n;return-1}function r(e,t){for(var n=t,r=n+1,i=e.length;i>r;++n,++r)e[n]=e[r];e.pop()}var i={};return i.on=i.addListener=function(e,t,r,i){if("function"!=typeof t)throw new TypeError;var s=this._getListeners(e);if(s.length&&-1!==n(s,t))throw new Error;if(r===!0||i===!0){var o=this,f=!1;s.push({fn:function u(n){o.removeListener(e,u),f||(f=!0,t.call(r||{},n))},scope:{}})}else s.push({fn:t,scope:r||{}});return this},i.emit=function(e,n){var r=this._getListeners(e);if(r.length){r=t(r);for(var i,s=0,o=r.length;o>s;++s)i=r[s],i.fn.call(i.scope,n)}return this},i.removeListener=function(e,t){var i,s=this._getListeners(e);return s.length&&(i=n(s,t),-1!==i&&r(s,i)),this},i.removeAllListeners=function(e){if("string"==typeof e){var t=this._getListeners(e);t.length=0}else if("undefined"==typeof e){var n=this._events;for(var r in n)n[r].length=0}return this},i.listeners=function(e){var n=this._getListeners(e);return n.length?t(n):[]},i.listenerCount=function(e){var t=this._getListeners(e);return t.length},i._getListeners=function(e){var t=this._events[e];if(!t)throw new Error("EventEmitter#_getListeners : event type `"+e+"` does not exist");return t},e});
//# sourceMappingURL=event-emitter.min.js.map